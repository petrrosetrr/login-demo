{"version":3,"sources":["components/ChangePassword/index.module.scss","components/Input/index.module.scss","components/App/index.module.scss","components/Form/index.module.scss","components/Button/index.module.scss","components/Home/index.module.scss","components/Header/index.module.scss","redux/hooks.ts","redux/userSlice.ts","components/Form/index.tsx","components/Input/index.tsx","components/Button/index.tsx","components/ChangePassword/index.tsx","components/Home/index.tsx","components/Login/index.tsx","components/Register/index.tsx","components/Header/index.tsx","components/App/index.tsx","redux/store.ts","index.tsx"],"names":["module","exports","useAppDispatch","useDispatch","useAppSelector","useSelector","loginUser","createAsyncThunk","arg","a","Promise","resolve","setTimeout","changePassword","logoutUser","userSlice","createSlice","name","initialState","loading","email","password","loggedIn","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","addMatcher","type","endsWith","Form","className","onSubmit","children","cn","styles","main","InputPassword","props","required","pattern","placeholder","Input","label","rest","input","Button","ChangePassword","user","dispatch","e","preventDefault","currentPass","currentTarget","currentPassword","value","newPass","newPassword","repeatPass","repeatPassword","Home","exact","to","Login","Register","Header","inner","title","nav","link","activeClassName","active","onClick","App","basename","path","store","configureStore","reducer","authReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00207991.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ChangePassword_main__2WzyB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Input_main__r0bcX\",\"input\":\"Input_input__SCFHN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__9tVZ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Form_main__pDYwp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Button_main__3RPJ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Home_main__3zPLT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Header_main__1JOAU\",\"inner\":\"Header_inner__33XPD\",\"title\":\"Header_title__1F92a\",\"nav\":\"Header_nav__1qWb_\",\"link\":\"Header_link__3idJx\",\"active\":\"Header_active__39ugI\",\"logout\":\"Header_logout__2QUcr\",\"email\":\"Header_email__1S9Ro\"};","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\n\ninterface IUserData extends IUserCredentials{\n    loading: boolean;\n    loggedIn: boolean\n}\n\ninterface IUserCredentials {\n    email: string | null;\n    password: string | null;\n}\n\nexport const loginUser = createAsyncThunk(\n    'auth/login',\n    async (arg: IUserCredentials) => {\n        return await new Promise<IUserCredentials>((resolve) => setTimeout(() => resolve(arg), 2000));\n    }\n);\n\nexport const changePassword = createAsyncThunk(\n    'auth/changePassword',\n    async  (arg: string) => {\n        return await new Promise<string>(resolve => setTimeout(() => resolve(arg),800));\n    }\n)\n\nexport const logoutUser = createAsyncThunk(\n    'auth/logout',\n    async () => {\n        return await new Promise(resolve => setTimeout(resolve, 500));\n    }\n);\n\nconst userSlice = createSlice({\n    name: 'user',\n    initialState: {\n        loading: false,\n        email: null,\n        password: null,\n        loggedIn: false,\n    } as IUserData,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n            .addCase(changePassword.fulfilled, (state, action) => {\n                state.password = action.payload;\n            })\n            .addCase(loginUser.fulfilled, (state, action) => {\n                state.email = action.payload.email;\n                state.password = action.payload.password;\n                state.loggedIn = true;\n            })\n            .addCase(logoutUser.fulfilled, (state) => {\n                state.email = null;\n                state.password = null;\n                state.loggedIn = false;\n            })\n            .addMatcher(action => action.type.endsWith('/pending'), (state) => {\n                state.loading = true;\n            })\n            .addMatcher(action => action.type.endsWith('/fulfilled'), (state) => {\n                state.loading = false;\n            })\n    }\n});\n\nexport default userSlice.reducer;","import React from 'react';\nimport styles from './index.module.scss';\nimport cn from 'classnames';\n\ninterface IProps {\n    className?: string;\n    onSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\n}\n\nconst Form: React.FC<IProps> = ({className, onSubmit, children}) => {\n\n    return (\n        <form className={cn(styles.main, className)} onSubmit={onSubmit}>\n            {children}\n        </form>\n    );\n};\n\nexport default Form;","import React from 'react';\nimport styles from './index.module.scss';\n\ninterface IProps {\n    label: string;\n\n    [key: string]: any;\n}\n\n\nexport const InputPassword: React.FC<IProps> = (props) => {\n    return (\n        <Input\n            required\n            {...props}\n            type={'password'}\n            pattern={'^((?=.*[A-Z])(?=.*)).{4,8}$'}\n            placeholder={\"Between 4 and 10 characters, at least one capital letter\"}\n        />\n    )\n}\n\n\nconst Input: React.FC<IProps> = ({label, ...rest}) => {\n    return (\n        <label className={styles.main}>\n            <span>{label}</span>\n            <input className={styles.input} {...rest}/>\n        </label>\n    );\n};\n\nexport default Input;","import React from 'react';\nimport styles from './index.module.scss';\n\ninterface IProps {\n    [key: string]: any;\n}\n\nconst Button: React.FC<IProps> = ({children, ...rest}) => {\n    return (\n        <button {...rest} className={styles.main}>\n            {children}\n        </button>\n    );\n};\n\nexport default Button;","import React from 'react';\nimport styles from './index.module.scss';\nimport {useAppDispatch, useAppSelector} from '../../redux/hooks';\nimport {changePassword} from '../../redux/userSlice';\nimport Form from '../Form';\nimport {InputPassword} from '../Input';\nimport Button from '../Button';\n\nconst ChangePassword = () => {\n    const password = useAppSelector(state => state.user.password);\n    const dispatch = useAppDispatch();\n\n    const submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const currentPass = e.currentTarget.currentPassword.value\n        const newPass = e.currentTarget.newPassword.value\n        const repeatPass = e.currentTarget.repeatPassword.value\n\n        if (currentPass === password\n            && newPass === repeatPass) {\n            dispatch(changePassword(newPass));\n        }\n    };\n\n    return (\n        <Form onSubmit={submitHandler} className={styles.main}>\n            <InputPassword label={'Current password'} name={'currentPassword'}/>\n            <InputPassword label={'New password'} name={'newPassword'}/>\n            <InputPassword label={'Repeat password'} name={'repeatPassword'}/>\n            <Button type=\"submit\">Submit</Button>\n        </Form>\n    );\n};\n\nexport default ChangePassword;","import React from 'react';\nimport styles from './index.module.scss';\nimport {NavLink} from 'react-router-dom';\n\nconst Home = () => {\n    return (\n        <div className={styles.main}>\n            <h1>Home Page</h1>\n            <NavLink exact to=\"/change-password\">Change password</NavLink>\n        </div>\n    );\n};\n\nexport default Home;","import React from 'react';\nimport Form from '../Form';\nimport styles from '../ChangePassword/index.module.scss';\nimport Input, {InputPassword} from '../Input';\nimport Button from '../Button';\nimport {loginUser} from '../../redux/userSlice';\nimport {useAppDispatch} from '../../redux/hooks';\n\nconst Login = () => {\n    const dispatch = useAppDispatch();\n\n    const submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        dispatch(loginUser({\n            email: e.currentTarget.email.value,\n            password: e.currentTarget.password.value\n        }));\n    };\n\n    return (\n        <Form onSubmit={submitHandler} className={styles.main}>\n            <Input label={'Email'} type={'email'} name={'email'} placeholder={'test@test.com'}/>\n            <InputPassword label={'Password'} name={'password'}/>\n            <Button type=\"submit\">Submit</Button>\n        </Form>\n    );\n};\n\nexport default Login;","import React from 'react';\nimport styles from '../ChangePassword/index.module.scss';\nimport Form from '../Form';\nimport Input, {InputPassword} from '../Input';\nimport Button from '../Button';\nimport {useAppDispatch} from '../../redux/hooks';\nimport {loginUser} from '../../redux/userSlice';\n\nconst Register = () => {\n    const dispatch = useAppDispatch();\n\n    const submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        dispatch(loginUser({\n            email: e.currentTarget.email.value,\n            password: e.currentTarget.password.value\n        }));\n    };\n\n    return (\n        <Form onSubmit={submitHandler} className={styles.main}>\n            <Input label={'Email'} type={'email'} name={'email'} placeholder={'test@test.com'}/>\n            <InputPassword label={'Password'} />\n            <Button type=\"submit\">Submit</Button>\n        </Form>\n    );\n};\n\nexport default Register;","import React from 'react';\nimport {useAppDispatch, useAppSelector} from '../../redux/hooks';\nimport {logoutUser} from '../../redux/userSlice';\nimport styles from './index.module.scss';\nimport {NavLink} from 'react-router-dom';\n\nconst Header = () => {\n    const {loggedIn, email} = useAppSelector(state => state.user);\n    const dispatch = useAppDispatch();\n    const logOutHandler = (e: React.MouseEvent<HTMLElement>) => {\n        e.preventDefault();\n        dispatch(logoutUser());\n    };\n\n    return (\n        <div className={styles.main}>\n            <div className={styles.inner}>\n                <h1 className={styles.title}>Login demo</h1>\n                <nav className={styles.nav}>\n                    {\n                        loggedIn ?\n                            <>\n                                <NavLink exact to=\"/\" className={styles.link} activeClassName={styles.active}> Home </NavLink>\n                                <NavLink exact to=\"/change-password\" className={styles.link} activeClassName={styles.active}> Change password </NavLink>\n                            </>\n                            :\n                            <>\n                                <NavLink exact to=\"/login\" className={styles.link} activeClassName={styles.active}> Login </NavLink>\n                                <NavLink exact to=\"/register\" className={styles.link} activeClassName={styles.active}> Register </NavLink>\n                            </>\n                    }\n                </nav>\n                {\n                    loggedIn &&\n                    <>\n                        <p className={styles.email}>Logged in as {email}</p>\n                        <button className={styles.link} onClick={logOutHandler}>Logout</button>\n                    </>\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport {useAppSelector} from '../../redux/hooks';\nimport styles from './index.module.scss';\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\nimport ChangePassword from '../ChangePassword';\nimport Home from '../Home';\nimport Login from '../Login';\nimport Register from '../Register';\nimport Header from '../Header';\n\nconst App: React.FC = () => {\n    const {loggedIn, loading} = useAppSelector(state => state.user);\n\n    return (\n        <div className={styles.main}>\n            <Router basename=\"/login-demo\">\n                <Header /> {\n                loading ?\n                    <p>Loading...</p>\n                    :\n                    <Switch>\n                        {\n                            loggedIn ?\n                                <>\n                                    <Route exact path=\"/\">\n                                        <Home/>\n                                    </Route>\n                                    <Route exact path=\"/change-password\">\n                                        <ChangePassword/>\n                                    </Route>\n                                    <Redirect to=\"/\"/>\n                                </>\n                                :\n                                <>\n                                    <Route exact path=\"/login\"> <Login/> </Route>\n                                    <Route exact path=\"/register\">\n                                        <Register/>\n                                    </Route>\n                                    <Redirect to=\"/login\"/>\n                                </>\n                        }\n                    </Switch>\n            }\n            </Router>\n        </div>\n    );\n};\n\nexport default App;","import { configureStore} from '@reduxjs/toolkit';\nimport authReducer from './userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: authReducer\n  },\n  devTools: process.env.NODE_ENV === 'development'\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\nimport 'the-new-css-reset/css/reset.css';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}